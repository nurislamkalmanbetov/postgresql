import psycopg2 
import os 

postgres = psycopg2.connect(
    dbname='my_bot', 
    user='postgres', 
    password='qwerty123', 
    host='localhost',
    port=5432
)

cursor = postgres.cursor()

def get_all_product():
    all_row = """
        SELECT * FROM product;
    """
    cursor.execute(query=all_row)
    all_product = cursor.fetchall()

    for product in all_product:
        print(product)

def get_product_id(prod_id):
    query = """
        SELECT * FROM product
        WHERE id = %s;
        """
    cursor.execute(query, (prod_id,))
    product = cursor.fetchone()
    if product:
        product_date = product[3]
        formated_date = product_date.strftime("%Y-%m-%d %H:%M:%S")
        print(f"""ID: {product[0]}\n–ù–∞–∑–≤–∞–Ω–∏–µ: {product[6]}\n–¶–µ–Ω–∞: {product[1]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {product[2]}
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {product[3]}\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product[4]}\n–ë—Ä—ç–Ω–¥: {product[5]}""")
        return product
    else:
        return None

def get_input_id():
    prod_id = None
    while True:
        prod_id = input("–í–≤–µ–¥–∏—Ç–µ ID –ø—Ä–æ–¥—É–∫—Ç–∞: ")
        if prod_id.isdigit():
            break
        else:
            print("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—ã")
    

    get_product_id(prod_id)

def get_product_brands_by_name(name):
    product_brands_query = """
        SELECT p.name, p.price, c.name as category, b.name as brand
        FROM product p
        JOIN brands b ON p.brand = b.id
        JOIN category c ON p.categories = c.id
        WHERE b.name = %s;
    """
    cursor.execute(product_brands_query, (name,))

    product = cursor.fetchall()
    for product in product:
        print(product)

def get_product_category_by_name(name):
    product_category_query = """
        SELECT p.name, p.price, c.name as category, b.name as brand
        FROM product p
        JOIN brands b ON p.brand = b.id
        JOIN category c ON p.categories = c.id
        WHERE c.name = %s;
    """
    cursor.execute(product_category_query, (name,))

    category = cursor.fetchall()
    for category in category:
        print(category)

def get_delete_product_with_id(product_id):
    product_id = """
        SELECT * FROM product
        WHERE id = {};
        """
    cursor.execute(query=product_id.format(product_id))
    product = cursor.fetchone()
    print(product)

def get_delete_product_with_id():
    product_id = input("–í–≤–µ–¥–∏—Ç–µ ID –ø—Ä–æ–¥—É–∫—Ç–∞: ")
    get_product_id(product_id)

def get_delete_product_with_id():
    product_id = input("–í–≤–µ–¥–∏—Ç–µ ID –ø—Ä–æ–¥—É–∫—Ç–∞: ")
    get_product_id(product_id)
    answer = input("–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å? –í–≤–µ–¥–∏—Ç–µ 'Yes', —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å: ")
    if answer.lower() == "yes":
        cursor.execute("DELETE FROM product WHERE id = %s", (product_id,))
        print("–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.")
    else:
        print("–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")

def get_add_info():
    name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: ")
    price = float(input("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –ø—Ä–æ–¥—É–∫—Ç–∞: "))
    description = input("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: ")
    category = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞ (4 –¥–ª—è laptop, 5 –¥–ª—è phone, 6 smart watches): "))
    brand = int(input("–í–≤–µ–¥–∏—Ç–µ ID –±—Ä–µ–Ω–¥–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ (26 –¥–ª—è Samsung, 27 –¥–ª—è Xiaomi, 28 –¥–ª—è Apple): "))
    query = """
        INSERT INTO product (name, price, description, categories, brand)
        VALUES (%s, %s, %s, %s, %s, %s)
    """
    values = (name, price, description, category, brand)
    cursor.execute(query, values)
    print(f"–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç: {name}, {price}, {description}, {category}, {brand}")
    print("–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.")

def get_update_id(product_id):
    name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: ")
    price = float(input("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –ø—Ä–æ–¥—É–∫—Ç–∞: "))
    description = input("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: ")
    category = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞ (4 –¥–ª—è laptop, 5 –¥–ª—è phone, 6 smart watches): "))
    brand = int(input("–í–≤–µ–¥–∏—Ç–µ ID –±—Ä–µ–Ω–¥–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ (26 –¥–ª—è Samsung, 27 –¥–ª—è Xiaomi, 28 –¥–ª—è Apple): "))
    query = """
        UPDATE product
        SET name = %s, price = %s, description = %s, categories = %s, brand = %s
        WHERE id = %s
    """
    values = (name, price, description, category, brand, product_id)
    cursor.execute(query, values)
    print(f"–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç: {name}, {price}, {description}, {category}, {brand}")
    print("–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")

def get_update():
    product_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –ø—Ä–æ–¥—É–∫—Ç–∞: "))
    get_product_id(product_id)
    get_update_id(product_id)


def search_products_by_query(query):
    query = query.strip()
    if query.isdigit():
        query = int(query)
        search_query = """
            SELECT *
            FROM product
            WHERE price <= %s;
        """
        cursor.execute(search_query, (query,))
    else:
        search_query = """
            SELECT *
            FROM product
            WHERE name ILIKE %s;
        """
        cursor.execute(search_query, (f"%{query}%",))

    products = cursor.fetchall()
    for product in products:
        print(product)


def all_functions():
    while True:
        print('1:  –í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã')
        print('2:  –ü—Ä–æ–¥—É–∫—Ç –ø–æ ID')
        print('3:  –ë—Ä–µ–Ω–¥—ã —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏')
        print('4:  –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏')
        print('5:  –£–¥–∞–ª–∏—Ç—å –ø–æ ID')
        print('6:  –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å')
        print('7:  –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å')
        print('8:  –ü–æ–∏—Å–∫ üîç')
        command = input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ –≤—ã—à–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —Ü–∏—Ñ—Ä–∞–º–∏: ')
        if not command.isdigit():
            continue 
        if command == '1':
            get_all_product()
        elif command == "3":
            brand = str(input("–í–≤–µ–¥–∏—Ç–µ –±—Ä—ç–Ω–¥. –ï—Å—Ç—å - Apple, Xiaomi, Samsung : "))
            brand = brand.title()
            print(get_product_brands_by_name(brand))
            if brand.isdigit():
                print('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –±—Ä–µ–Ω–¥ –±—É–∫–≤–∞–º–∏')
            else:
                print(get_product_category_by_name(brand))

        elif command == '4':
            category = str(input("–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é. –ï—Å—Ç—å - Laptop, Phone, Smart watches : "))
            category = category.lower()
            if category.isdigit():
                print('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±—É–∫–≤–∞–º–∏')
            else:
                print(get_product_category_by_name(category))
        elif command == '5':
            get_delete_product_with_id()
        elif command == '6':
            get_add_info()
        elif command == '7':
            get_update()
        elif command == '8':
            search = str(input("–í–≤–µ–¥–∏—Ç–µ —Ç–æ —á—Ç–æ –∏—â–µ—Ç–µ: "))
            search = search.title()
            print(search_products_by_query(search))
        elif command == '2':
            get_input_id()
        answer = input("–•–æ—Ç–∏—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å? 'Y' –∏–ª–∏ –≤—ã–π—Ç–∏? –ï—Å–ª–∏ –≤—ã–π—Ç–∏ —Ç–æ - 'N': ")
        if answer.lower() == "n":
            break
        else:
            os.system('cls' if os.name == 'nt' else 'clear')
            continue


all_functions()
